--For this project, I downloaded Spotify data from Kaggle.
--Then I created a table to insert Spotify data into.
--Then I performed analytics on the data using SQL to identify various information.

--How I created the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

--Then I inserted the Spotify Data .csv into the table.

--Next, I explored the data using the following SQL. 

--Identifying all tracks by Harry Styles
SELECT track_name, artist_name
FROM Spotifydata
WHERE artist_name= 'Harry Styles'
GROUP BY artist_name;

--Identifying all tracks where popularity is 90 or more and energy is less than 0.6
SELECT track_name
FROM Spotifydata
WHERE popularity >= '90'
AND energy < '0.6'
GROUP BY track_name;

--Identifying the top 5 longest songs
SELECT Track_name, duration_ms
FROM Spotifydata
ORDER BY duration_ms desc
LIMIT 5;

--Identifying AVG popularity, danceability, and energy by artist and track
SELECT artist_name
, track_name
, avg(popularity)
, avg(danceability)
, avg(energy)
FROM Spotifydata
GROUP BY artist_name, track_name;

--Using a CTE to identify the AVG popularity for artists, for every artist with an AVG popularity of 90 or above identifying their name, avg popularity and labeling them as a "Top Star"
WITH popularity_average_CTE AS (
SELECT s.artist_name,
AVG(s.popularity) AS average_popularity
FROM SpotifyData s 
GROUP BY s.artist_name
)
 
SELECT  artist_name,
        average_popularity,
        'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90;


